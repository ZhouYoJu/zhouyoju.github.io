<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[YJ‘S BLOG]]></title>
  <subtitle><![CDATA[You thought you only had two problems...]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.lastkilometer.tech/"/>
  <updated>2017-04-24T12:41:07.000Z</updated>
  <id>http://www.lastkilometer.tech/</id>
  
  <author>
    <name><![CDATA[ZHOU YONGJUN]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Nginx 日志文件切割]]></title>
    <link href="http://www.lastkilometer.tech/2017/04/24/Nginx-%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%88%87%E5%89%B2/"/>
    <id>http://www.lastkilometer.tech/2017/04/24/Nginx-日志文件切割/</id>
    <published>2017-04-24T12:10:15.000Z</published>
    <updated>2017-04-24T12:41:07.000Z</updated>
    <content type="html"><![CDATA[<p>由于 Nginx 的日志都是写在一个文件当中的，因此，我们需要每天零点将前一天的日志存为另外一个文件，这里我们就将 Nginx 位于 logs 目录中的 access.log 存为 access_[yyyy-MM-dd].log 的文件。其实 logs 目录中还有个 error.log 的错误日志文件，这个文件也需要每天切割一个，在这里就说 access.log 了，error.log 的切割方法类似。<br><a id="more"></a></p>
<h2 id="Linux-平台切割"><a href="#Linux-平台切割" class="headerlink" title="Linux 平台切割"></a>Linux 平台切割</h2><h3 id="shell-crontab方式"><a href="#shell-crontab方式" class="headerlink" title="shell+crontab方式"></a>shell+crontab方式</h3><p>在 Linux 平台上进行切割，需要使用 date 命令以获得昨天的日期、使用 kill 命令向 Nginx 进程发送重新打开日志文件的信号，以及 crontab 设置执行任务周期。</p>
<ol>
<li>先创建一个 Shell 脚本，如下：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash  </span></div><div class="line"><span class="comment">## 零点执行该脚本  </span></div><div class="line">  </div><div class="line"><span class="comment">## Nginx 日志文件所在的目录  </span></div><div class="line">LOGS_PATH=/usr/<span class="built_in">local</span>/nginx/logs  </div><div class="line">  </div><div class="line"><span class="comment">## 获取昨天的 yyyy-MM-dd  </span></div><div class="line">YESTERDAY=$(date <span class="_">-d</span> <span class="string">"yesterday"</span> +%Y-%m-%d)  </div><div class="line">  </div><div class="line"><span class="comment">## 移动文件  </span></div><div class="line">mv <span class="variable">$&#123;LOGS_PATH&#125;</span>/access.log <span class="variable">$&#123;LOGS_PATH&#125;</span>/access_<span class="variable">$&#123;YESTERDAY&#125;</span>.log  </div><div class="line">  </div><div class="line"><span class="comment">## 向 Nginx 主进程发送 USR1 信号。USR1 信号是重新打开日志文件  </span></div><div class="line"><span class="built_in">kill</span> -USR1 $(cat /usr/<span class="built_in">local</span>/nginx/nginx.pid)</div></pre></td></tr></table></figure>
<ol>
<li><p>上面这个脚本中的最后一行必须向 Nginx 的进程发送 USR1 信号以重新打开日志文件，如果不写的话，Nginx 会继续将日志信息写入 access_[yyyy-MM-dd].log 的那个文件中，这显然是不正确的。</p>
<p> 脚本完成后将其存入 Nginx 安装目录的 sbin 中，取名为 cut-log.sh，之后使用 crontab -e 新增一个定时任务，在其中增加执行这个脚本：</p>
</li>
</ol>
<figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">0 </span><span class="number">0</span> * * * /bin/bash /<span class="keyword">usr</span>/local/nginx/sbin/cut-<span class="keyword">log</span>.sh</div></pre></td></tr></table></figure>
<p> 查看定时任务状态：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="regexp">/etc/i</span>nit.d<span class="regexp">/crond status</span></div></pre></td></tr></table></figure></p>
<p> 重启</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="regexp">/etc/i</span>nit.d<span class="regexp">/crond restart</span></div></pre></td></tr></table></figure>
<p>遇到的问题：</p>
<ul>
<li>执行 <code>kill -USR1</code> 报<code>arguments must be process or job IDs</code>:</li>
</ul>
<p>   原因： 某帖子中<code>kill -USR1</code> 参数为<code>’$cat /usr/local/nginx/nginx.pid)‘</code>导致参数不能解析成功。</p>
<h3 id="logrotate方式"><a href="#logrotate方式" class="headerlink" title="logrotate方式"></a>logrotate方式</h3><p>   另外一种很好的方式。没有尝试过，就不能多说了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>由于 Nginx 的日志都是写在一个文件当中的，因此，我们需要每天零点将前一天的日志存为另外一个文件，这里我们就将 Nginx 位于 logs 目录中的 access.log 存为 access_[yyyy-MM-dd].log 的文件。其实 logs 目录中还有个 error.log 的错误日志文件，这个文件也需要每天切割一个，在这里就说 access.log 了，error.log 的切割方法类似。<br></p>]]>
    
    </summary>
    
      <category term="nginx 日志" scheme="http://www.lastkilometer.tech/tags/nginx-%E6%97%A5%E5%BF%97/"/>
    
      <category term="nginx" scheme="http://www.lastkilometer.tech/categories/nginx/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[多说关闭了]]></title>
    <link href="http://www.lastkilometer.tech/2017/03/24/%E5%A4%9A%E8%AF%B4%E5%85%B3%E9%97%AD%E4%BA%86/"/>
    <id>http://www.lastkilometer.tech/2017/03/24/多说关闭了/</id>
    <published>2017-03-23T16:05:51.000Z</published>
    <updated>2017-03-23T16:10:15.000Z</updated>
    <content type="html"><![CDATA[<p>多说关闭了，在我的blog 还未集成成功的时候。</p>
<ul>
<li><a id="more"></a>
</li>
</ul>
<hr>
<p>正想要👀下评论系统的实现。评论系统难以快速变现，步履维艰，或许也是机遇吧。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>多说关闭了，在我的blog 还未集成成功的时候。</p>
<ul>
<li></li></ul>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://www.lastkilometer.tech/2017/03/20/hello-world/"/>
    <id>http://www.lastkilometer.tech/2017/03/20/hello-world/</id>
    <published>2017-03-20T14:53:24.000Z</published>
    <updated>2017-03-28T15:09:20.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<ul>
<li><a id="more"></a>
</li>
</ul>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<ul>
<li></li></ul>]]>
    
    </summary>
    
  </entry>
  
</feed>
